@page "/pacientes/agregar"
@page "/pacientes/editar/{id:int}"
@using Clinica.Repositories.Pacientes
@rendermode InteractiveServer
@inject IRepositorioPacientes _repositorioPacientes
@inject NavigationManager _navigationManager
@using Clinica.Data

<h3>@(_editando ? "Actualizar paciente" : "Nuevo paciente")</h3>
<EditForm Model="_paciente" FormName="frmPaciente" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="mb-3 row">
        <label for="txtNombre" class="col-sm-2 col-form-label">Nombre</label>
        <div class="col-sm-10">
            <InputText class="form-control" id="txtNombre" @bind-Value="_paciente.Nombre" />
            <ValidationMessage For="()=>_paciente.Nombre" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtCorreo" class="col-sm-2 col-form-label">Correo</label>
        <div class="col-sm-10">
            <InputText class="form-control" id="txtCorreo" @bind-Value="_paciente.Correo" />
            <ValidationMessage For="()=>_paciente.Correo" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtTelefono" class="col-sm-2 col-form-label">Teléfono</label>
        <div class="col-sm-10">
            <InputText class="form-control" id="txtTelefono" @bind-Value="_paciente.Telefono" />
            <ValidationMessage For="()=>_paciente.Telefono" />
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
    <button type="button" class="btn btn-danger" @onclick="Cancelar">Cancelar</button>
</EditForm>

@code {
    [Parameter]
    public int id { get; set; }
    private Paciente _paciente = new();
    private bool _editando = false;


    protected override async Task OnInitializedAsync()
    {
        if (id > 0)
        {
            _editando = true;
            _paciente = await _repositorioPacientes.Get(id);
        }
    }

    private async Task Guardar()
    {
        if(_editando)
        {
            _paciente.Id = id;
            await _repositorioPacientes.Update(_paciente);
        }
        else
        {
            await _repositorioPacientes.Add(_paciente);
        }
        Cancelar();
    }

    private void Cancelar()
    {
        _navigationManager.NavigateTo("/pacientes");
    }
}